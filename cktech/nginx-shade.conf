# Nginx configuration for Shade Identity Provider - CKTech.org
# Deployment: /opt/shade or ~/shade (on nginx host)
# Container: shade (port 8288 -> internal 8080)
# Domain: auth.cktech.org
# Cert: Wildcard cert at /etc/nginx/certs/cktech.org/

# Place this file: /etc/nginx/conf.d/shade.conf
# Test: nginx -t
# Reload: systemctl reload nginx

# Upstream to Shade container
upstream shade_backend {
    server 127.0.0.1:8288;

    # Connection pooling
    keepalive 32;
    keepalive_timeout 60s;
    keepalive_requests 100;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name auth.cktech.org;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name auth.cktech.org;

    # SSL certificate - Using CKTech.org wildcard cert
    ssl_certificate /etc/nginx/certs/cktech.org/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/cktech.org/privkey.pem;
    # If you have a chain file, uncomment:
    # ssl_trusted_certificate /etc/nginx/certs/cktech.org/chain.pem;

    # SSL configuration - Modern, secure settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # OCSP stapling (optional, comment out if issues)
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # CSP - adjust based on your needs
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'self';" always;

    # Logging
    access_log /var/log/nginx/shade-access.log combined;
    error_log /var/log/nginx/shade-error.log warn;

    # Client settings
    client_max_body_size 10M;
    client_body_buffer_size 128k;

    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    send_timeout 60s;

    # Buffer settings
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;

    # Proxy all requests to Shade
    location / {
        proxy_pass http://shade_backend;

        # Essential proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # OAuth/OIDC specific headers
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;

        # HTTP/1.1 for keepalive
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # Disable buffering for SSE/WebSocket if you add those features
        proxy_buffering off;

        # Error handling
        proxy_intercept_errors off;
        proxy_redirect off;
    }

    # Health check endpoint (can be accessed directly)
    location /health {
        proxy_pass http://shade_backend/health;
        access_log off;

        # Return quickly for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }

    # Metrics endpoint (restrict access!)
    location /metrics {
        # Only allow from localhost and internal network
        allow 127.0.0.1;
        allow 10.0.0.0/8;    # Internal network - adjust as needed
        allow 172.16.0.0/12; # Docker networks
        allow 192.168.0.0/16; # Private networks
        deny all;

        proxy_pass http://shade_backend/metrics;
        access_log off;
    }

    # Optional: Static assets caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
        proxy_pass http://shade_backend;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
